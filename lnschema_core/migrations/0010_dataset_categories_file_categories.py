# Generated by Django 4.2.2 on 2023-07-21 07:31

import django.db.models.deletion
from django.db import migrations, models

import lnschema_core.users


class Migration(migrations.Migration):
    dependencies = [
        ("lnschema_core", "0009_remove_featureset_files_feature_unit_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="dataset",
            name="categories",
            field=models.ManyToManyField(related_name="datasets", to="lnschema_core.category"),
        ),
        migrations.AddField(
            model_name="file",
            name="categories",
            field=models.ManyToManyField(related_name="files", to="lnschema_core.category"),
        ),
        migrations.AddField(
            model_name="tag",
            name="description",
            field=models.TextField(default=None, null=True),
        ),
        migrations.AddField(
            model_name="tag",
            name="parents",
            field=models.ManyToManyField(related_name="children", to="lnschema_core.tag"),
        ),
        migrations.RenameField(
            model_name="run",
            old_name="external_id",
            new_name="reference",
        ),
        migrations.RenameField(
            model_name="run",
            old_name="name",
            new_name="reference_type",
        ),
        migrations.DeleteModel(
            name="Project",
        ),
        migrations.AddField(
            model_name="file",
            name="tags",
            field=models.ManyToManyField(related_name="files", to="lnschema_core.tag"),
        ),
        migrations.RunSQL("insert into lnschema_core_file_tags (id, file_id, tag_id) select id, file_id, tag_id from lnschema_core_tag_files"),
        migrations.RemoveField(
            model_name="tag",
            name="files",
        ),
        migrations.AddField(
            model_name="file",
            name="input_of",
            field=models.ManyToManyField(related_name="input_files", to="lnschema_core.run"),
        ),
        migrations.RunSQL("insert into lnschema_core_file_input_of (id, file_id, run_id) select id, file_id, run_id from lnschema_core_run_inputs"),
        migrations.RemoveField(
            model_name="run",
            name="inputs",
        ),
        migrations.AlterField(
            model_name="file",
            name="run",
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name="output_files", to="lnschema_core.run"),
        ),
        migrations.RenameModel(
            old_name="Tag",
            new_name="Label",
        ),
        migrations.RenameField(
            model_name="file",
            old_name="tags",
            new_name="labels",
        ),
        migrations.RemoveField(
            model_name="dataset",
            name="categories",
        ),
        migrations.RemoveField(
            model_name="file",
            name="categories",
        ),
        migrations.AddField(
            model_name="dataset",
            name="labels",
            field=models.ManyToManyField(related_name="datasets", to="lnschema_core.label"),
        ),
        migrations.AddField(
            model_name="label",
            name="feature",
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name="labels", to="lnschema_core.feature"),
        ),
        migrations.AlterField(
            model_name="file",
            name="run",
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name="output_files", to="lnschema_core.run"),
        ),
        migrations.AlterField(
            model_name="file",
            name="transform",
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name="files", to="lnschema_core.transform"),
        ),
        migrations.AlterField(
            model_name="label",
            name="created_by",
            field=models.ForeignKey(
                default=lnschema_core.users.current_user_id, on_delete=django.db.models.deletion.PROTECT, related_name="created_labels", to="lnschema_core.user"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="label",
            unique_together={("name", "feature")},
        ),
        migrations.DeleteModel(
            name="Category",
        ),
        migrations.RenameField(
            model_name="featureset",
            old_name="type",
            new_name="ref_orm",
        ),
        migrations.AddField(
            model_name="label",
            name="ref_id",
            field=models.CharField(default=None, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name="label",
            name="ref_orm",
            field=models.CharField(default=None, max_length=30, null=True),
        ),
        migrations.AddField(
            model_name="label",
            name="ref_schema",
            field=models.CharField(default=None, max_length=30, null=True),
        ),
        migrations.RenameField(
            model_name="featureset",
            old_name="schema",
            new_name="ref_schema",
        ),
        migrations.AddField(
            model_name="featureset",
            name="name",
            field=models.CharField(default=None, max_length=128, null=True),
        ),
        migrations.RenameField(
            model_name="featureset",
            old_name="field",
            new_name="ref_field",
        ),
        migrations.AddField(
            model_name="featureset",
            name="readout",
            field=models.CharField(default=None, max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name="feature",
            name="type",
            field=models.CharField(db_index=True, default=None, max_length=64),
        ),
        migrations.AddField(
            model_name="featureset",
            name="type",
            field=models.CharField(default=None, max_length=64, null=True),
        ),
        migrations.AddField(
            model_name="featureset",
            name="n",
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
    ]
